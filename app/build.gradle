apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


def cfg = rootProject.ext.android
android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion


    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        applicationId "com.frozen.daily"
        versionCode cfg.versionCode
        versionName cfg.varsionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "boolean", "DEBUG_MODE", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            buildConfigField "boolean", "DEBUG_MODE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    dataBinding {
//        enabled = true
//    }



}

dependencies {
    def depend = rootProject.ext.dependencies
    implementation project(':base')
    if (!isModuleRun.toBoolean()){
        implementation project(':module_my')
        implementation project(':module_im')
    }

//    implementation project(':module_my')
    /* implementation fileTree(include: ['*.jar'], dir: 'libs')
     implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
     implementation "com.android.support:appcompat-v7:$android_suppot_version"
     implementation "com.android.support:design:$android_suppot_version"
     implementation "com.android.support:support-v4:$android_suppot_version"
     implementation 'com.android.support.constraint:constraint-layout:1.1.2'
     implementation "org.jetbrains.anko:anko-commons:$anko_version"
     implementation 'androidx.core:core-ktx:0.3'
     implementation "android.arch.lifecycle:extensions:$lifecycle_version"
     implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
     // use -ktx for Kotlin
     implementation "android.arch.navigation:navigation-ui-ktx:$nav_version" // use -ktx for Kotlin
     // optional - Test helpers
     implementation 'android.arch.lifecycle:extensions:1.1.1'
     implementation 'com.android.support:support-annotations:27.1.1'
     androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$nav_version"
     //    implementation "android.arch.work:work-runtime-ktx:$work_version" // use -ktx for Kotlin
     // optional - Firebase JobDispatcher support
     //    implementation "android.arch.work:work-firebase:$work_version"
     // optional - Test helpers
     //    androidTestImplementation "android.arch.work:work-testing:$work_version"
     implementation 'com.qmuiteam:qmui:1.1.0'
     implementation 'me.yokeyword:fragmentation:1.3.3'
     implementation 'com.orhanobut:logger:2.1.1'
     implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
     implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'
     implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
     implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
     implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"
     implementation "com.github.bumptech.glide:glide:$glide_version"
     implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
     kapt "com.github.bumptech.glide:compiler:$glide_version"

     implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.38'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'com.android.support.test:runner:1.0.2'
     androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'*/
}

kapt {
    generateStubs = true
}
